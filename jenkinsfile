pipeline {
    agent any

    stages {
        
                stage('git') {
            steps {
            
                git branch: 'marwen', url: 'https://github.com/Mohamedazizgh/DevOpsSpring.git',
                credentialsId:"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";
                
            }
}
        
       stage('MVN Package'){
            steps {
                sh """mvn -version  """
                sh """java -version """
               sh """mvn package -e """
            }
        }
        
      stage("MVN Compile"){
            steps {
                sh """mvn compile -e """
                
            }
        }
           stage("MVN Install"){
            steps {
                sh """mvn install """
                
            }
        }
        stage("MVN Clean"){
            steps {
                sh """mvn clean -e """
                
            }
        }
        
        stage('database connection') {
            steps{
                sh '''
                sudo docker stop mysql || true
                sudo docker restart mysql || true
                '''
            }
        }
        
        stage ('Mockito/Junit') {
             steps {
            sh 'mvn test -Dtest="SecteurActiviteTest" '
            }
        }
        
          stage("Sonar") {
        steps {

       sh "mvn clean verify  sonar:sonar \
   -Dsonar.projectKey=Secteur \
  -Dsonar.host.url=http://localhost:9000 \
  -Dsonar.login=2ec5bab357514c59a417ca53b1790d78dfc501b1\
  -Dsonar.java.binaries=src/main "
  
  
               }
     }
       
     stage('Nexus'){
            steps{
                sh """mvn deploy """
            }
        } 
        
        stage("Docker Image") {
        steps{
           sh ' docker build -t snoussi22/achat-1.0:latest .'
        }
        } 
        
        stage('DockerCompose') {
              steps {
                  sh "docker-compose -f docker-compose.yml up -d  "
              }
              }
              
             stage("login to docker hub") {
        steps{
	
	       sh 'docker login -u snoussi22 -p 50585480Ss '
            
	    
        }
        }
	
	stage("Push to DockerHub") {
                steps{
                    sh 'docker push  snoussi22/achat-1.0:latest'
                }
        }
              
          stage('mailling'){
           steps {
            mail bcc: '', body: '''Hello from Jenkins,
            Devops Pipeline returned success.
            Best Regards''', cc: '', from: 'marwensnoussi77@gmail.com', replyTo: '', subject: 'Devops Pipeline', to: 'marwen.snoussi@esprit.tn'
    
            }
       }
        
  
            
        
                
            

    }
    
    post {
      	always {
      		sh 'docker logout'
      		emailext attachLog: true, body: "${env.BUILD_URL} has result ${currentBuild.result}", compressLog: true, subject: "Status of pipeline: ${currentBuild.fullDisplayName}", to: 'marwen.snoussi@esprit.tn'
          	emailext body: 'A Test EMail', recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']], subject: 'Test'
  		
      	}
      }
}
