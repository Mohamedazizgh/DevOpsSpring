   
pipeline {
   agent any
environment {
       DOCKERHUB = credentials('dockerhub')
    }
    stages {
        
                stage('git') {
            steps {
            
                git branch: 'Ameni', url: 'https://github.com/Mohamedazizgh/DevOpsSpring.git',
                credentialsId:"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";
                
            }
}
        /* 
	 stage("MVN Install"){
            steps {
                sh """mvn install """
                
            }
        }
	stage("MVN Clean"){
            steps {
                sh """mvn clean -e """
                
            }
        }
             stage("SonarQube") {
        steps {
          sh "mvn clean install  sonar:sonar \
  -Dsonar.projectKey=products \
  -Dsonar.host.url=http://192.168.1.19:9000 \
  -Dsonar.login=54272e2305a92bae983babb61520761a62c3411a \
  -Dsonar.java.binaries=src/main "
  
  
               }
     }
             stage("nexus") {
        steps{
          sh 'mvn deploy  -DgroupId=tn.esprit.rh -DartifactId=achat -Dversion=1.0 -DgeneratePom=true -Dpackaging=jar -DrepositoryId=deploymentRepo -Durl=http://192.168.1.19:8081/repository/maven-releases/  -Dfile=target/achat-1.0.jar'
        }
       
        }
            stage("Build docker image") {
        steps{
           sh ' docker build -t amenisbei/achat-1.0:latest .'
        }
        }
      
           stage("login dockerhub") {
        steps{
	/*echo $DOCKERHUB_PSW | docker login -u $DOCKERHUB_USR --password-stdin*/
	       sh 'docker login -u amenisbei -p ameni@123 '
        }
        }
            stage("Push l'image dans dockerhub") {
        steps{
	
	       sh 'docker push amenisbei/achat-1.0:latest'
        }
        }
         
     stage('Build docker compose') {
                 steps {
		      sh """mvn clean -e """
                     //sh 'docker-compose up -d --build'
                   }
              }*/
   }
}
