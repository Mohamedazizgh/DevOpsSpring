   
pipeline {
   agent any

    stages {
        
                stage('git') {
            steps {
            
                git branch: 'Ameni', url: 'https://github.com/Mohamedazizgh/DevOpsSpring.git',
                credentialsId:"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";
                
            }
}
   stage('MVN Package'){
            steps {
                sh """mvn -version  """
                sh """java -version """
               sh """mvn package -e """
            }
        }
        
      stage("MVN Compile"){
            steps {
                sh """mvn compile -e """
                
            }
        }
           stage("MVN Install"){
            steps {
                sh """mvn install """
                
            }
        }
        stage("MVN Clean"){
            steps {
                sh """mvn clean -e """
                
            }
        }
           stage('SonarQube analysis') {
//    def scannerHome = tool 'SonarScanner 4.0';
        steps{
        withSonarQubeEnv('sonarqube-8.9.7') { 
        // If you have configured more than one global server connection, you can specify its name
//      sh "${scannerHome}/bin/sonar-scanner"
        sh "mvn sonar:sonar"
    }
        }
        }
             stage("nexus") {
        steps{
          sh 'mvn deploy  -DgroupId=tn.esprit.rh -DartifactId=achat -Dversion=1.0 -DgeneratePom=true -Dpackaging=jar -DrepositoryId=deploymentRepo -Durl=http://192.168.112.210:8081/repository/maven-releases/  -Dfile=target/achat-1.0.jar'
        }
       
        }
            stage("Build docker image") {
        steps{
           sh ' docker build -t oussemajerfel/achat-1.0:latest .'
        }
        } 
   }
}
